@model IEnumerable<PresentationLayer.Areas.SysAdmin.Models.EmployeeLeaveAssignVM>
@using Telerik.Web.Mvc.UI;
@using myRes=PresentationLayer.LocalResource.Resource;
@{  System.Threading.Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(System.Configuration.ConfigurationManager.AppSettings["Culture"].ToString());
  System.Threading.Thread.CurrentThread.CurrentCulture = System.Threading.Thread.CurrentThread.CurrentUICulture;}
@{
    WebGrid grid = new WebGrid(Model);
}
<div>
    
    @*@(Html.Telerik().Grid<PresentationLayer.Areas.SysAdmin.Models.StudentVM>(Model.Data)
        .Name("Grid")
        .DataKeys(keys => keys.Add(c => c.StudentId))
        .EnableCustomBinding(true)
        .Columns(columns =>
        {
            columns.Bound(p => p.StudentId).Width(50).Title("Id");
            columns.Bound(p => p.RegisterId).Width(100).Title("Gen Reg No");
            columns.Bound(p => p.ClassDivision).Width(120).Title("Class & Division");
            columns.Bound(p => p.StudentFullNameWithTitle).Width(250);            
            columns.Bound(p => p.Remark).Width(100);
        })
                                .Reorderable(command => command.Columns(true))
            .Sortable()
                .Resizable(command => command.Columns(true))
                                         .Pageable(paging => paging.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageInput | GridPagerStyles.PageSizeDropDown))
                              .Scrollable(paging => paging.Height(300))
                        .Filterable()
    )*@

    @*@grid.GetHtml(columns: new[] {
    grid.Column("StudentId"),
    grid.Column("RegisterId"),
    grid.Column("ClassDivision"),
    grid.Column("StudentFullNameWithTitle"),
    grid.Column("Remark")
        })*@

    @*http://www.c-sharpcorner.com/article/beginners-guide-to-create-gridview-in-asp-net-mvc/*@
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary list-panel" id="list-panel">
                <div class="panel-heading list-panel-heading">
                    <h1 class="panel-title list-panel-title">@myRes.Employee @myRes.LeaveAssignment</h1>
                </div>
                <div class="panel-body">
                    <table id="assets-data-table" class="table table-striped table-bordered" style="width:100%">
                        <thead>
                            <tr>
                                <th>@myRes.EmployeeId</th>
                                <th>@myRes.EmployeeFullNName</th>
                                <th>@myRes.LeaveBalance</th>
                                <th>@myRes.AddNewLeaves (@myRes.indays)</th>
                                <th>@myRes.Remark</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var asset in Model)
                            {
                                <tr>
                                    <td>@asset.EmployeeId @Html.Hidden("EmployeeIds", asset.EmployeeId) </td>
                                    <td>@asset.EmployeeFullName</td>
                                    <td>@asset.BalanceLeaves@Html.Hidden("txtBalanceLeaves", asset.BalanceLeaves)</td>
                                    @*<td>@Html.TextBox("txtBalanceLeaves", asset.BalanceLeaves, new { @Style = "width:100px;", @onblur = "checkNumeric(this)" })</td>*@
                                    <td>@Html.TextBox("txtNewLeaves", asset.NewLeaves, new { @Style = "width:100px;", @onblur = "checkNumeric(this)" })</td>
                                    <td>@Html.TextBox("txtRemark", asset.Remark, new { @Style = "width:300px;" })</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div>
            @if (TempData["Error"] != null)
            {
                <p style="color:red;">

                    @(TempData["Error"] != null ? TempData["Error"].ToString() : "")
                </p>
            }
            @if (TempData["Message"] != null)
            {
                <p style="color:green;">

                    @(TempData["Message"] != null ? TempData["Message"].ToString() : "")
                </p>
            }
        </div>
    </div>

</div>

