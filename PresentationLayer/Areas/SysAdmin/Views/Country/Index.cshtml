@model Telerik.Web.Mvc.GridModel<PresentationLayer.Areas.SysAdmin.Models.CountryVM>
@using Telerik.Web.Mvc.UI
@using myRes=PresentationLayer.LocalResource.Resource;
@{  System.Threading.Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(System.Configuration.ConfigurationManager.AppSettings["Culture"].ToString());
  System.Threading.Thread.CurrentThread.CurrentCulture = System.Threading.Thread.CurrentThread.CurrentUICulture;}
@{
    ViewBag.Title = myRes.index;
}

<h2>@myRes.index -@myRes.Country  </h2>


@(Html.Telerik().Grid<PresentationLayer.Areas.SysAdmin.Models.CountryVM>(Model.Data)
        .Name("Grid")
        .DataKeys(keys => keys.Add(c => c.CountryId))
                    .ToolBar(commands => commands.Custom().Action("Create", "Country", new { area = "SysAdmin" }).ImageHtmlAttributes(new { @class = "t-add" }).ButtonType(GridButtonType.Image).HtmlAttributes(new { title = "Add", id = "Add", @class = "RightAlign" }))

        .DataBinding(dataBinding =>
            dataBinding.Ajax()
                                                    .Select("Select", "Country", new { area = "SysAdmin", GridButtonType.Text })
                                                .Update("Edit", "Country", new { area = "SysAdmin", GridButtonType.Text }))
        .Columns(columns =>
        {
            columns.Command(commands =>
            {
                commands.Custom("Edit").Action("Edit", "Country", new { area = "SysAdmin" }).ImageHtmlAttributes(new { @class = "t-edit" }).ButtonType(GridButtonType.Image).HtmlAttributes(new { title = "Edit" });
            }).Width(50).Title(myRes.Update);

            //columns.Command(commands =>
            //{
            //    commands.Custom("Delete").Action("Delete", "Country", new { area = "SysAdmin" }).ImageHtmlAttributes(new { @onclick = "return confirmDelete()", @class = "t-delete" }).ButtonType(GridButtonType.Image).HtmlAttributes(new { title = "Delete", @class = "RightAlign" });
            //}).Width(50).Title("Delete");


            columns.Bound(p => p.CountryName);
            columns.Bound(p => p.Status);
            columns.Bound(p => p.Remark);
        })
            .Pageable(paging => paging.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageInput | GridPagerStyles.PageSizeDropDown))
                      .Scrollable(paging => paging.Height(300))
                                .Reorderable(command => command.Columns(true))
            .Sortable()
                .Filterable()
                .Resizable(command => command.Columns(true))
)
