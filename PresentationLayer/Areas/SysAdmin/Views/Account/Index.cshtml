@model Telerik.Web.Mvc.GridModel<PresentationLayer.Areas.SysAdmin.Models.AccountVM>
@using Telerik.Web.Mvc.UI
@using myRes=PresentationLayer.LocalResource.Resource;
@{  System.Threading.Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(System.Configuration.ConfigurationManager.AppSettings["Culture"].ToString());
  System.Threading.Thread.CurrentThread.CurrentCulture = System.Threading.Thread.CurrentThread.CurrentUICulture;}
@{
    ViewBag.Title =myRes.index;
}

<h2>@myRes.index-@myRes.Account</h2>

@(Html.Telerik().Grid<PresentationLayer.Areas.SysAdmin.Models.AccountVM>(Model.Data)
        .Name("Grid")
        .DataKeys(keys => keys.Add(c => c.SrNo))
                    .ToolBar(commands => commands.Custom().Action("Create", "Account", new { area = "SysAdmin" }).ImageHtmlAttributes(new { @class = "t-add" }).ButtonType(GridButtonType.Image).HtmlAttributes(new { title = "Add", id = "Add", @class = "RightAlign" }))

        .DataBinding(dataBinding =>
            dataBinding.Ajax()
                                                            .Select("Select", "Account", new { area = "SysAdmin", GridButtonType.Text })
                                                        .Update("Edit", "Account", new { area = "SysAdmin", GridButtonType.Text }))
        .Columns(columns =>
        {
            columns.Command(commands =>
            {
                commands.Custom("Edit").Action("Edit", "Account", new { area = "SysAdmin" }).ImageHtmlAttributes(new { @class = "t-edit" }).ButtonType(GridButtonType.Image).HtmlAttributes(new { title = "Edit" });
            }).Width(50).Title(myRes.Update);

            columns.Bound(p => p.NarrationDetails);
            columns.Bound(p => p.TransactionType);
            columns.Bound(p => p.Amount);
            //columns.Bound(p => p.Balance);
            columns.Bound(p => p.TransactionDate);
            columns.Bound(p => p.Remark);
            columns.Bound(p => p.CustomerName);
            columns.Bound(p => p.BankName);
            columns.Bound(p => p.ChqDDNumber);
            columns.Bound(p => p.ContactNo);
        })
            .Pageable(paging => paging.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageInput | GridPagerStyles.PageSizeDropDown))
                      .Scrollable(paging => paging.Height(300))
                                .Reorderable(command => command.Columns(true))
            .Sortable()
                .Filterable()
                .Resizable(command => command.Columns(true))
)

<h4>        Total Balance:
    </h4>



